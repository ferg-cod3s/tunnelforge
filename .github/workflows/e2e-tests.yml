name: E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  e2e-tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: web/package-lock.json

    - name: Install dependencies
      run: |
        cd web
        npm ci

    - name: Install Playwright browsers
      run: |
        cd web
        npx playwright install --with-deps

    - name: Build application
      run: |
        cd web
        npm run build

    - name: Start test server
      run: |
        cd web
        npm run test:e2e:ci &
        echo "SERVER_PID=$!" >> $GITHUB_ENV

    - name: Wait for server to be ready
      run: |
        timeout 60 bash -c 'until curl -f http://localhost:4022/health; do sleep 1; done'

    - name: Run E2E tests
      run: |
        cd web
        npm run test:e2e
      env:
        TUNNELFORGE_URL: http://localhost:4022
        CI: true

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: web/playwright-report/
        retention-days: 30

    - name: Upload test results (JUnit)
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: web/test-results/
        retention-days: 30

    - name: Stop test server
      if: always()
      run: |
        if [ ! -z "$SERVER_PID" ]; then
          kill $SERVER_PID || true
        fi

  e2e-tests-windows:
    runs-on: windows-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: web/package-lock.json

    - name: Install dependencies
      run: |
        cd web
        npm ci

    - name: Install Playwright browsers
      run: |
        cd web
        npx playwright install --with-deps

    - name: Build application
      run: |
        cd web
        npm run build

    - name: Start test server
      run: |
        cd web
        Start-Process npm -ArgumentList "run test:e2e:ci" -NoNewWindow -PassThru
        echo "SERVER_STARTED=true" >> $env:GITHUB_ENV

    - name: Wait for server to be ready
      run: |
        $timeout = 60
        $startTime = Get-Date
        do {
          try {
            Invoke-WebRequest -Uri "http://localhost:4022/health" -UseBasicParsing -TimeoutSec 5
            $ready = $true
          } catch {
            Start-Sleep -Seconds 1
          }
          $elapsed = (Get-Date) - $startTime
        } while (!$ready -and $elapsed.TotalSeconds -lt $timeout)

        if (!$ready) {
          throw "Server did not become ready within $timeout seconds"
        }

    - name: Run E2E tests
      run: |
        cd web
        npm run test:e2e
      env:
        TUNNELFORGE_URL: http://localhost:4022
        CI: true

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-windows
        path: web/playwright-report/
        retention-days: 30

  e2e-tests-macos:
    runs-on: macos-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: web/package-lock.json

    - name: Install dependencies
      run: |
        cd web
        npm ci

    - name: Install Playwright browsers
      run: |
        cd web
        npx playwright install --with-deps

    - name: Build application
      run: |
        cd web
        npm run build

    - name: Start test server
      run: |
        cd web
        npm run test:e2e:ci &
        echo "SERVER_PID=$!" >> $GITHUB_ENV

    - name: Wait for server to be ready
      run: |
        timeout 60 bash -c 'until curl -f http://localhost:4022/health; do sleep 1; done'

    - name: Run E2E tests
      run: |
        cd web
        npm run test:e2e
      env:
        TUNNELFORGE_URL: http://localhost:4022
        CI: true

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-macos
        path: web/playwright-report/
        retention-days: 30