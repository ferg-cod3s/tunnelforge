{"version":3,"file":"session-view.js","sourceRoot":"","sources":["../../src/client/components/session-view.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, PropertyValues, html } from 'lit';\nimport { customElement, property, state } from 'lit/decorators.js';\nimport type { Session } from './session-list.js';\nimport { Renderer } from '../renderer.js';\n\n@customElement('session-view')\nexport class SessionView extends LitElement {\n  // Disable shadow DOM to use Tailwind\n  createRenderRoot() {\n    return this;\n  }\n\n  @property({ type: Object }) session: Session | null = null;\n  @state() private connected = false;\n  @state() private renderer: Renderer | null = null;\n  @state() private sessionStatusInterval: number | null = null;\n  @state() private showMobileInput = false;\n  @state() private mobileInputText = '';\n  @state() private isMobile = false;\n  @state() private touchStartX = 0;\n  @state() private touchStartY = 0;\n  @state() private loading = false;\n  @state() private loadingFrame = 0;\n\n  private loadingInterval: number | null = null;\n\n  private keyboardHandler = (e: KeyboardEvent) => {\n    if (!this.session) return;\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    this.handleKeyboardInput(e);\n  };\n\n  private touchStartHandler = (e: TouchEvent) => {\n    if (!this.isMobile) return;\n\n    const touch = e.touches[0];\n    this.touchStartX = touch.clientX;\n    this.touchStartY = touch.clientY;\n  };\n\n  private touchEndHandler = (e: TouchEvent) => {\n    if (!this.isMobile) return;\n\n    const touch = e.changedTouches[0];\n    const touchEndX = touch.clientX;\n    const touchEndY = touch.clientY;\n\n    const deltaX = touchEndX - this.touchStartX;\n    const deltaY = touchEndY - this.touchStartY;\n\n    // Check for horizontal swipe from left edge (back gesture)\n    const isSwipeRight = deltaX > 100;\n    const isVerticallyStable = Math.abs(deltaY) < 100;\n    const startedFromLeftEdge = this.touchStartX < 50;\n\n    if (isSwipeRight && isVerticallyStable && startedFromLeftEdge) {\n      // Trigger back navigation\n      this.handleBack();\n    }\n  };\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.connected = true;\n\n    // Show loading animation if no session yet\n    if (!this.session) {\n      this.startLoading();\n    }\n\n    // Detect mobile device\n    this.isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ||\n                   window.innerWidth <= 768;\n\n    // Add global keyboard event listener only for desktop\n    if (!this.isMobile) {\n      document.addEventListener('keydown', this.keyboardHandler);\n    } else {\n      // Add touch event listeners for mobile swipe gestures\n      document.addEventListener('touchstart', this.touchStartHandler, { passive: true });\n      document.addEventListener('touchend', this.touchEndHandler, { passive: true });\n    }\n\n    // Start polling session status\n    this.startSessionStatusPolling();\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.connected = false;\n\n    // Remove global keyboard event listener\n    if (!this.isMobile) {\n      document.removeEventListener('keydown', this.keyboardHandler);\n    } else {\n      // Remove touch event listeners\n      document.removeEventListener('touchstart', this.touchStartHandler);\n      document.removeEventListener('touchend', this.touchEndHandler);\n    }\n\n    // Stop polling session status\n    this.stopSessionStatusPolling();\n\n    // Stop loading animation\n    this.stopLoading();\n\n    // Cleanup renderer if it exists\n    if (this.renderer) {\n      this.renderer.dispose();\n      this.renderer = null;\n    }\n  }\n\n  firstUpdated(changedProperties: PropertyValues) {\n    super.firstUpdated(changedProperties);\n    if (this.session) {\n      this.stopLoading();\n      this.createInteractiveTerminal();\n    }\n  }\n\n  updated(changedProperties: any) {\n    super.updated(changedProperties);\n\n    // Stop loading and create terminal when session becomes available\n    if (changedProperties.has('session') && this.session && this.loading) {\n      this.stopLoading();\n      this.createInteractiveTerminal();\n    }\n\n    // Adjust terminal height for mobile buttons after render\n    if (changedProperties.has('showMobileInput') || changedProperties.has('isMobile')) {\n      requestAnimationFrame(() => {\n        this.adjustTerminalForMobileButtons();\n      });\n    }\n  }\n\n  private createInteractiveTerminal() {\n    if (!this.session) return;\n\n    const terminalElement = this.querySelector('#interactive-terminal') as HTMLElement;\n    if (!terminalElement) return;\n\n    // Create renderer once and connect to current session\n    this.renderer = new Renderer(terminalElement);\n\n    // Wait a moment for freshly created sessions before connecting\n    const sessionAge = Date.now() - new Date(this.session.startedAt).getTime();\n    const delay = sessionAge < 5000 ? 2000 : 0; // 2 second delay if session is less than 5 seconds old\n\n    if (delay > 0) {\n      // Show loading animation during delay for fresh sessions\n      this.startLoading();\n    }\n\n    setTimeout(() => {\n      if (this.renderer && this.session) {\n        this.stopLoading(); // Stop loading before connecting\n        this.renderer.connectToStream(this.session.id);\n      }\n    }, delay);\n\n    // Listen for session exit events\n    terminalElement.addEventListener('session-exit', this.handleSessionExit.bind(this) as EventListener);\n  }\n\n  private async handleKeyboardInput(e: KeyboardEvent) {\n    if (!this.session) return;\n\n    // Don't send input to exited sessions\n    if (this.session.status === 'exited') {\n      console.log('Ignoring keyboard input - session has exited');\n      return;\n    }\n\n    let inputText = '';\n\n    // Handle special keys\n    switch (e.key) {\n      case 'Enter':\n        if (e.ctrlKey) {\n          // Ctrl+Enter - send to tty-fwd for proper handling\n          inputText = 'ctrl_enter';\n        } else if (e.shiftKey) {\n          // Shift+Enter - send to tty-fwd for proper handling\n          inputText = 'shift_enter';\n        } else {\n          // Regular Enter\n          inputText = 'enter';\n        }\n        break;\n      case 'Escape':\n        inputText = 'escape';\n        break;\n      case 'ArrowUp':\n        inputText = 'arrow_up';\n        break;\n      case 'ArrowDown':\n        inputText = 'arrow_down';\n        break;\n      case 'ArrowLeft':\n        inputText = 'arrow_left';\n        break;\n      case 'ArrowRight':\n        inputText = 'arrow_right';\n        break;\n      case 'Tab':\n        inputText = '\\t';\n        break;\n      case 'Backspace':\n        inputText = '\\b';\n        break;\n      case 'Delete':\n        inputText = '\\x7f';\n        break;\n      case ' ':\n        inputText = ' ';\n        break;\n      default:\n        // Handle regular printable characters\n        if (e.key.length === 1) {\n          inputText = e.key;\n        } else {\n          // Ignore other special keys\n          return;\n        }\n        break;\n    }\n\n    // Handle Ctrl combinations (but not if we already handled Ctrl+Enter above)\n    if (e.ctrlKey && e.key.length === 1 && e.key !== 'Enter') {\n      const charCode = e.key.toLowerCase().charCodeAt(0);\n      if (charCode >= 97 && charCode <= 122) { // a-z\n        inputText = String.fromCharCode(charCode - 96); // Ctrl+A = \\x01, etc.\n      }\n    }\n\n    // Send the input to the session\n    try {\n      const response = await fetch(`/api/sessions/${this.session.id}/input`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ text: inputText })\n      });\n\n      if (!response.ok) {\n        if (response.status === 400) {\n          console.log('Session no longer accepting input (likely exited)');\n          // Update session status to exited if we get 400 error\n          if (this.session && (this.session.status as string) !== 'exited') {\n            this.session = { ...this.session, status: 'exited' };\n            this.requestUpdate();\n            this.stopSessionStatusPolling();\n          }\n        } else {\n          console.error('Failed to send input to session:', response.status);\n        }\n      }\n    } catch (error) {\n      console.error('Error sending input:', error);\n    }\n  }\n\n  private handleBack() {\n    window.location.search = '';\n  }\n\n  private handleSessionExit(e: Event) {\n    const customEvent = e as CustomEvent;\n    console.log('Session exit event received:', customEvent.detail);\n\n    if (this.session && customEvent.detail.sessionId === this.session.id) {\n      // Update session status to exited\n      this.session = { ...this.session, status: 'exited' };\n      this.requestUpdate();\n\n      // Stop polling immediately\n      this.stopSessionStatusPolling();\n\n      // Switch to snapshot mode\n      requestAnimationFrame(() => {\n        this.createInteractiveTerminal();\n      });\n    }\n  }\n\n  // Mobile input methods\n  private handleMobileInputToggle() {\n    this.showMobileInput = !this.showMobileInput;\n    if (this.showMobileInput) {\n      // Focus the textarea after a short delay to ensure it's rendered\n      requestAnimationFrame(() => {\n        const textarea = this.querySelector('#mobile-input-textarea') as HTMLTextAreaElement;\n        if (textarea) {\n          textarea.focus();\n          this.adjustTextareaForKeyboard();\n        }\n      });\n    } else {\n      // Clean up viewport listener when closing overlay\n      const textarea = this.querySelector('#mobile-input-textarea') as HTMLTextAreaElement;\n      if (textarea && (textarea as any)._viewportCleanup) {\n        (textarea as any)._viewportCleanup();\n      }\n    }\n  }\n\n  private adjustTextareaForKeyboard() {\n    // Adjust the layout when virtual keyboard appears\n    const textarea = this.querySelector('#mobile-input-textarea') as HTMLTextAreaElement;\n    const controls = this.querySelector('#mobile-controls') as HTMLElement;\n    if (!textarea || !controls) return;\n\n    const adjustLayout = () => {\n      const viewportHeight = window.visualViewport?.height || window.innerHeight;\n      const windowHeight = window.innerHeight;\n      const keyboardHeight = windowHeight - viewportHeight;\n\n      // If keyboard is visible (viewport height is significantly smaller)\n      if (keyboardHeight > 100) {\n        // Move controls above the keyboard\n        controls.style.transform = `translateY(-${keyboardHeight}px)`;\n        controls.style.transition = 'transform 0.3s ease';\n\n        // Calculate available space for textarea\n        const header = this.querySelector('.flex.items-center.justify-between.p-4.border-b') as HTMLElement;\n        const headerHeight = header?.offsetHeight || 60;\n        const controlsHeight = controls?.offsetHeight || 120;\n        const padding = 48; // Additional padding for spacing\n\n        // Available height is viewport height minus header and controls (controls are now above keyboard)\n        const maxTextareaHeight = viewportHeight - headerHeight - controlsHeight - padding;\n        const inputArea = textarea.parentElement as HTMLElement;\n        if (inputArea && maxTextareaHeight > 0) {\n          // Set the input area to not exceed the available space\n          inputArea.style.height = `${maxTextareaHeight}px`;\n          inputArea.style.maxHeight = `${maxTextareaHeight}px`;\n          inputArea.style.overflow = 'hidden';\n\n          // Set textarea height within the container\n          const labelHeight = 40; // Height of the label above textarea\n          const textareaMaxHeight = Math.max(maxTextareaHeight - labelHeight, 80);\n          textarea.style.height = `${textareaMaxHeight}px`;\n          textarea.style.maxHeight = `${textareaMaxHeight}px`;\n        }\n      } else {\n        // Reset position when keyboard is hidden\n        controls.style.transform = 'translateY(0px)';\n        controls.style.transition = 'transform 0.3s ease';\n\n        // Reset textarea height and constraints\n        const inputArea = textarea.parentElement as HTMLElement;\n        if (inputArea) {\n          inputArea.style.height = '';\n          inputArea.style.maxHeight = '';\n          inputArea.style.overflow = '';\n          textarea.style.height = '';\n          textarea.style.maxHeight = '';\n        }\n      }\n    };\n\n    // Listen for viewport changes (keyboard show/hide)\n    if (window.visualViewport) {\n      window.visualViewport.addEventListener('resize', adjustLayout);\n      // Clean up listener when overlay is closed\n      const cleanup = () => {\n        if (window.visualViewport) {\n          window.visualViewport.removeEventListener('resize', adjustLayout);\n        }\n      };\n      // Store cleanup function for later use\n      (textarea as any)._viewportCleanup = cleanup;\n    }\n\n    // Initial adjustment\n    requestAnimationFrame(adjustLayout);\n  }\n\n  private handleMobileInputChange(e: Event) {\n    const textarea = e.target as HTMLTextAreaElement;\n    this.mobileInputText = textarea.value;\n  }\n\n  private async handleMobileInputSendOnly() {\n    // Get the current value from the textarea directly\n    const textarea = this.querySelector('#mobile-input-textarea') as HTMLTextAreaElement;\n    const textToSend = textarea?.value?.trim() || this.mobileInputText.trim();\n\n    if (!textToSend) return;\n\n    try {\n      // Send text without enter key\n      await this.sendInputText(textToSend);\n\n      // Clear both the reactive property and textarea\n      this.mobileInputText = '';\n      if (textarea) {\n        textarea.value = '';\n      }\n\n      // Trigger re-render to update button state\n      this.requestUpdate();\n\n      // Hide the input overlay after sending\n      this.showMobileInput = false;\n    } catch (error) {\n      console.error('Error sending mobile input:', error);\n      // Don't hide the overlay if there was an error\n    }\n  }\n\n  private async handleMobileInputSend() {\n    // Get the current value from the textarea directly\n    const textarea = this.querySelector('#mobile-input-textarea') as HTMLTextAreaElement;\n    const textToSend = textarea?.value?.trim() || this.mobileInputText.trim();\n\n    if (!textToSend) return;\n\n    try {\n      // Add enter key at the end to execute the command\n      await this.sendInputText(textToSend + '\\n');\n\n      // Clear both the reactive property and textarea\n      this.mobileInputText = '';\n      if (textarea) {\n        textarea.value = '';\n      }\n\n      // Trigger re-render to update button state\n      this.requestUpdate();\n\n      // Hide the input overlay after sending\n      this.showMobileInput = false;\n    } catch (error) {\n      console.error('Error sending mobile input:', error);\n      // Don't hide the overlay if there was an error\n    }\n  }\n\n  private async handleSpecialKey(key: string) {\n    await this.sendInputText(key);\n  }\n\n  private async sendInputText(text: string) {\n    if (!this.session) return;\n\n    try {\n      const response = await fetch(`/api/sessions/${this.session.id}/input`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ text })\n      });\n\n      if (!response.ok) {\n        console.error('Failed to send input to session');\n      }\n    } catch (error) {\n      console.error('Error sending input:', error);\n    }\n  }\n\n  private adjustTerminalForMobileButtons() {\n    // Disabled for now to avoid viewport issues\n    // The mobile buttons will overlay the terminal\n  }\n\n  private startLoading() {\n    this.loading = true;\n    this.loadingFrame = 0;\n    this.loadingInterval = window.setInterval(() => {\n      this.loadingFrame = (this.loadingFrame + 1) % 4;\n      this.requestUpdate();\n    }, 200); // Update every 200ms for smooth animation\n  }\n\n  private stopLoading() {\n    this.loading = false;\n    if (this.loadingInterval) {\n      clearInterval(this.loadingInterval);\n      this.loadingInterval = null;\n    }\n  }\n\n  private getLoadingText(): string {\n    const frames = ['⠋', '⠙', '⠹', '⠸', '⠼', '⠴', '⠦', '⠧', '⠇', '⠏'];\n    return frames[this.loadingFrame % frames.length];\n  }\n\n  private startSessionStatusPolling() {\n    if (this.sessionStatusInterval) {\n      clearInterval(this.sessionStatusInterval);\n    }\n\n    // Only poll for running sessions - exited sessions don't need polling\n    if (this.session?.status !== 'exited') {\n      this.sessionStatusInterval = window.setInterval(() => {\n        this.checkSessionStatus();\n      }, 2000);\n    }\n  }\n\n  private stopSessionStatusPolling() {\n    if (this.sessionStatusInterval) {\n      clearInterval(this.sessionStatusInterval);\n      this.sessionStatusInterval = null;\n    }\n  }\n\n  private async checkSessionStatus() {\n    if (!this.session) return;\n\n    try {\n      const response = await fetch('/api/sessions');\n      if (!response.ok) return;\n\n      const sessions = await response.json();\n      const currentSession = sessions.find((s: Session) => s.id === this.session!.id);\n\n      if (currentSession && currentSession.status !== this.session.status) {\n        // Store old status before updating\n        const oldStatus = this.session.status;\n\n        // Session status changed\n        this.session = { ...this.session, status: currentSession.status };\n        this.requestUpdate();\n\n        // Session status polling is now only for detecting new sessions\n        // Exit events are handled via SSE stream directly\n      }\n    } catch (error) {\n      console.error('Error checking session status:', error);\n    }\n  }\n\n  render() {\n    if (!this.session) {\n      return html`\n        <div class=\"p-4 text-vs-muted\">\n          No session selected\n        </div>\n      `;\n    }\n\n    return html`\n      <style>\n        session-view *, session-view *:focus, session-view *:focus-visible {\n          outline: none !important;\n          box-shadow: none !important;\n        }\n      </style>\n      <div class=\"flex flex-col bg-vs-bg font-mono\" style=\"height: 100vh; outline: none !important; box-shadow: none !important;\">\n        <!-- Compact Header -->\n        <div class=\"flex items-center justify-between px-3 py-2 border-b border-vs-border bg-vs-bg-secondary text-sm\">\n          <div class=\"flex items-center gap-3\">\n            <button\n              class=\"bg-vs-user text-vs-text hover:bg-vs-accent font-mono px-2 py-1 border-none rounded transition-colors text-xs\"\n              @click=${this.handleBack}\n            >\n              BACK\n            </button>\n            <div class=\"text-vs-text\">\n              <div class=\"text-vs-accent\">${this.session.command}</div>\n              <div class=\"text-vs-muted text-xs\">${this.session.workingDir}</div>\n            </div>\n          </div>\n          <div class=\"flex items-center gap-3 text-xs\">\n            <span class=\"${this.session.status === 'running' ? 'text-vs-user' : 'text-vs-warning'}\">\n              ${this.session.status.toUpperCase()}\n            </span>\n          </div>\n        </div>\n\n        <!-- Terminal Container -->\n        <div class=\"flex-1 bg-black overflow-x-auto overflow-y-hidden min-h-0 relative\" id=\"terminal-container\">\n          <div id=\"interactive-terminal\" class=\"w-full h-full\"></div>\n          \n          ${this.loading ? html`\n            <!-- Loading overlay -->\n            <div class=\"absolute inset-0 bg-black bg-opacity-80 flex items-center justify-center\">\n              <div class=\"text-vs-text font-mono text-center\">\n                <div class=\"text-2xl mb-2\">${this.getLoadingText()}</div>\n                <div class=\"text-sm text-vs-muted\">Connecting to session...</div>\n              </div>\n            </div>\n          ` : ''}\n        </div>\n\n        <!-- Mobile Input Controls -->\n        ${this.isMobile && !this.showMobileInput ? html`\n          <div class=\"flex-shrink-0 p-4 bg-vs-bg\">\n              <!-- First row: Arrow keys -->\n              <div class=\"flex gap-2 mb-2\">\n                <button\n                  class=\"flex-1 bg-vs-muted text-vs-bg hover:bg-vs-accent font-mono px-3 py-2 border-none rounded transition-colors text-sm\"\n                  @click=${() => this.handleSpecialKey('arrow_up')}\n                >\n                  ↑\n                </button>\n                <button\n                  class=\"flex-1 bg-vs-muted text-vs-bg hover:bg-vs-accent font-mono px-3 py-2 border-none rounded transition-colors text-sm\"\n                  @click=${() => this.handleSpecialKey('arrow_down')}\n                >\n                  ↓\n                </button>\n                <button\n                  class=\"flex-1 bg-vs-muted text-vs-bg hover:bg-vs-accent font-mono px-3 py-2 border-none rounded transition-colors text-sm\"\n                  @click=${() => this.handleSpecialKey('arrow_left')}\n                >\n                  ←\n                </button>\n                <button\n                  class=\"flex-1 bg-vs-muted text-vs-bg hover:bg-vs-accent font-mono px-3 py-2 border-none rounded transition-colors text-sm\"\n                  @click=${() => this.handleSpecialKey('arrow_right')}\n                >\n                  →\n                </button>\n              </div>\n\n              <!-- Second row: Special keys -->\n              <div class=\"flex gap-2\">\n                <button\n                  class=\"bg-vs-user text-vs-text hover:bg-vs-accent font-mono px-3 py-2 border-none rounded transition-colors text-sm\"\n                  @click=${() => this.handleSpecialKey('\\t')}\n                >\n                  TAB\n                </button>\n                <button\n                  class=\"bg-vs-function text-vs-bg hover:bg-vs-highlight font-mono px-3 py-2 border-none rounded transition-colors text-sm\"\n                  @click=${() => this.handleSpecialKey('enter')}\n                >\n                  ENTER\n                </button>\n                <button\n                  class=\"bg-vs-warning text-vs-bg hover:bg-vs-highlight font-mono px-3 py-2 border-none rounded transition-colors text-sm\"\n                  @click=${() => this.handleSpecialKey('escape')}\n                >\n                  ESC\n                </button>\n                <button\n                  class=\"bg-vs-error text-vs-text hover:bg-vs-highlight font-mono px-3 py-2 border-none rounded transition-colors text-sm\"\n                  @click=${() => this.handleSpecialKey('\\x03')}\n                >\n                  ^C\n                </button>\n                <button\n                  class=\"flex-1 bg-vs-function text-vs-bg hover:bg-vs-highlight font-mono px-3 py-2 border-none rounded transition-colors text-sm\"\n                  @click=${this.handleMobileInputToggle}\n                >\n                  TYPE\n                </button>\n              </div>\n          </div>\n        ` : ''}\n\n        <!-- Full-Screen Input Overlay (only when opened) -->\n        ${this.isMobile && this.showMobileInput ? html`\n            <div class=\"fixed inset-0 bg-vs-bg-secondary bg-opacity-95 z-50 flex flex-col\" style=\"height: 100vh; height: 100dvh;\">\n              <!-- Input Header -->\n              <div class=\"flex items-center justify-between p-4 border-b border-vs-border flex-shrink-0\">\n                <div class=\"text-vs-text font-mono text-sm\">Terminal Input</div>\n                <button\n                  class=\"text-vs-muted hover:text-vs-text text-lg leading-none border-none bg-transparent cursor-pointer\"\n                  @click=${this.handleMobileInputToggle}\n                >\n                  ×\n                </button>\n              </div>\n\n              <!-- Input Area with dynamic height -->\n              <div class=\"flex-1 p-4 flex flex-col min-h-0\">\n                <div class=\"text-vs-muted text-sm mb-2 flex-shrink-0\">\n                  Type your command(s) below. Supports multiline input.\n                </div>\n                <textarea\n                  id=\"mobile-input-textarea\"\n                  class=\"flex-1 bg-vs-bg text-vs-text border border-vs-border font-mono text-sm p-4 resize-none outline-none\"\n                  placeholder=\"Enter your command here...\"\n                  .value=${this.mobileInputText}\n                  @input=${this.handleMobileInputChange}\n                  @keydown=${(e: KeyboardEvent) => {\n                    if (e.key === 'Enter' && (e.ctrlKey || e.metaKey)) {\n                      e.preventDefault();\n                      this.handleMobileInputSend();\n                    }\n                  }}\n                  style=\"min-height: 120px; margin-bottom: 16px;\"\n                ></textarea>\n              </div>\n\n              <!-- Controls - Fixed above keyboard -->\n              <div id=\"mobile-controls\" class=\"fixed bottom-0 left-0 right-0 p-4 border-t border-vs-border bg-vs-bg-secondary z-60\" style=\"padding-bottom: max(1rem, env(safe-area-inset-bottom)); transform: translateY(0px);\">\n                <!-- Send Buttons Row -->\n                <div class=\"flex gap-2 mb-3\">\n                  <button\n                    class=\"flex-1 bg-vs-user text-vs-text hover:bg-vs-accent font-mono px-4 py-3 border-none rounded transition-colors text-sm font-bold\"\n                    @click=${this.handleMobileInputSendOnly}\n                    ?disabled=${!this.mobileInputText.trim()}\n                  >\n                    SEND\n                  </button>\n                  <button\n                    class=\"flex-1 bg-vs-function text-vs-bg hover:bg-vs-highlight font-mono px-4 py-3 border-none rounded transition-colors text-sm font-bold\"\n                    @click=${this.handleMobileInputSend}\n                    ?disabled=${!this.mobileInputText.trim()}\n                  >\n                    SEND + ENTER\n                  </button>\n                </div>\n\n                <div class=\"text-vs-muted text-xs text-center\">\n                  SEND: text only • SEND + ENTER: text with enter key\n                </div>\n              </div>\n            </div>\n        ` : ''}\n      </div>\n    `;\n  }\n}"]}