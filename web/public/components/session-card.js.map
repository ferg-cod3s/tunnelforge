{"version":3,"file":"session-card.js","sourceRoot":"","sources":["../../src/client/components/session-card.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, html, css, PropertyValues } from 'lit';\nimport { customElement, property, state } from 'lit/decorators.js';\nimport { Renderer } from '../renderer.js';\n\nexport interface Session {\n  id: string;\n  command: string;\n  workingDir: string;\n  status: 'running' | 'exited';\n  exitCode?: number;\n  startedAt: string;\n  lastModified: string;\n  pid?: number;\n}\n\n@customElement('session-card')\nexport class SessionCard extends LitElement {\n  // Disable shadow DOM to use Tailwind\n  createRenderRoot() {\n    return this;\n  }\n\n  @property({ type: Object }) session!: Session;\n  @state() private renderer: Renderer | null = null;\n  \n  private refreshInterval: number | null = null;\n\n  firstUpdated(changedProperties: PropertyValues) {\n    super.firstUpdated(changedProperties);\n    this.createRenderer();\n    this.startRefresh();\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    if (this.refreshInterval) {\n      clearInterval(this.refreshInterval);\n    }\n    if (this.renderer) {\n      this.renderer.dispose();\n      this.renderer = null;\n    }\n  }\n\n  private createRenderer() {\n    const playerElement = this.querySelector('#player') as HTMLElement;\n    if (!playerElement) return;\n\n    // Create single renderer for this card - use larger dimensions for better preview\n    this.renderer = new Renderer(playerElement, 80, 24, 10000, 8, true);\n\n    // Always use snapshot endpoint for cards\n    const url = `/api/sessions/${this.session.id}/snapshot`;\n\n    // Wait a moment for freshly created sessions before connecting\n    const sessionAge = Date.now() - new Date(this.session.startedAt).getTime();\n    const delay = sessionAge < 5000 ? 2000 : 0; // 2 second delay if session is less than 5 seconds old\n\n    setTimeout(() => {\n      if (this.renderer) {\n        this.renderer.loadFromUrl(url, false); // false = not a stream, use snapshot\n        // Disable pointer events so clicks pass through to the card\n        this.renderer.setPointerEventsEnabled(false);\n      }\n    }, delay);\n  }\n\n  private startRefresh() {\n    this.refreshInterval = window.setInterval(() => {\n      if (this.renderer) {\n        const url = `/api/sessions/${this.session.id}/snapshot`;\n        this.renderer.loadFromUrl(url, false);\n        // Ensure pointer events stay disabled after refresh\n        this.renderer.setPointerEventsEnabled(false);\n      }\n    }, 10000); // Refresh every 10 seconds\n  }\n\n  private handleCardClick() {\n    this.dispatchEvent(new CustomEvent('session-select', {\n      detail: this.session,\n      bubbles: true,\n      composed: true\n    }));\n  }\n\n  private handleKillClick(e: Event) {\n    e.stopPropagation();\n    e.preventDefault();\n    this.dispatchEvent(new CustomEvent('session-kill', {\n      detail: this.session.id,\n      bubbles: true,\n      composed: true\n    }));\n  }\n\n  private async handlePidClick(e: Event) {\n    e.stopPropagation();\n    e.preventDefault();\n    \n    if (this.session.pid) {\n      try {\n        await navigator.clipboard.writeText(this.session.pid.toString());\n        console.log('PID copied to clipboard:', this.session.pid);\n      } catch (error) {\n        console.error('Failed to copy PID to clipboard:', error);\n        // Fallback: select text manually\n        this.fallbackCopyToClipboard(this.session.pid.toString());\n      }\n    }\n  }\n\n  private fallbackCopyToClipboard(text: string) {\n    const textArea = document.createElement('textarea');\n    textArea.value = text;\n    document.body.appendChild(textArea);\n    textArea.focus();\n    textArea.select();\n    try {\n      document.execCommand('copy');\n      console.log('PID copied to clipboard (fallback):', text);\n    } catch (error) {\n      console.error('Fallback copy failed:', error);\n    }\n    document.body.removeChild(textArea);\n  }\n\n  render() {\n    const isRunning = this.session.status === 'running';\n    \n    return html`\n      <div class=\"bg-vs-bg border border-vs-border rounded shadow cursor-pointer overflow-hidden\"\n           @click=${this.handleCardClick}>\n        <!-- Compact Header -->\n        <div class=\"flex justify-between items-center px-3 py-2 border-b border-vs-border\">\n          <div class=\"text-vs-text text-xs font-mono truncate pr-2 flex-1\">${this.session.command}</div>\n          ${this.session.status === 'running' ? html`\n            <button\n              class=\"bg-vs-warning text-vs-bg hover:bg-vs-highlight font-mono px-2 py-0.5 border-none text-xs disabled:opacity-50 flex-shrink-0 rounded\"\n              @click=${this.handleKillClick}\n            >\n              ${this.session.status === 'running' ? 'kill' : 'clean'}\n            </button>\n          ` : ''}\n        </div>\n\n        <!-- XTerm renderer (main content) -->\n        <div class=\"session-preview bg-black overflow-hidden\" style=\"aspect-ratio: 640/480;\">\n          <div id=\"player\" class=\"w-full h-full\"></div>\n        </div>\n\n        <!-- Compact Footer -->\n        <div class=\"px-3 py-2 text-vs-muted text-xs border-t border-vs-border\">\n          <div class=\"flex justify-between items-center\">\n            <span class=\"${this.session.status === 'running' ? 'text-vs-user' : 'text-vs-warning'} text-xs\">\n              ${this.session.status}\n            </span>\n            ${this.session.pid ? html`\n              <span \n                class=\"cursor-pointer hover:text-vs-accent transition-colors\"\n                @click=${this.handlePidClick}\n                title=\"Click to copy PID\"\n              >\n                PID: ${this.session.pid} <span class=\"opacity-50\">(click to copy)</span>\n              </span>\n            ` : ''}\n          </div>\n          <div class=\"truncate text-xs opacity-75\" title=\"${this.session.workingDir}\">${this.session.workingDir}</div>\n        </div>\n      </div>\n    `;\n  }\n\n}"]}