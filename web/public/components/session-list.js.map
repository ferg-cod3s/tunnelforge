{"version":3,"file":"session-list.js","sourceRoot":"","sources":["../../src/client/components/session-list.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, html } from 'lit';\nimport { customElement, property, state } from 'lit/decorators.js';\nimport { repeat } from 'lit/directives/repeat.js';\nimport './session-create-form.js';\nimport './session-card.js';\n\nexport interface Session {\n  id: string;\n  command: string;\n  workingDir: string;\n  status: 'running' | 'exited';\n  exitCode?: number;\n  startedAt: string;\n  lastModified: string;\n  pid?: number;\n}\n\n@customElement('session-list')\nexport class SessionList extends LitElement {\n  // Disable shadow DOM to use Tailwind\n  createRenderRoot() {\n    return this;\n  }\n\n  @property({ type: Array }) sessions: Session[] = [];\n  @property({ type: Boolean }) loading = false;\n  @property({ type: Boolean }) hideExited = true;\n  @property({ type: Boolean }) showCreateModal = false;\n\n  @state() private killingSessionIds = new Set<string>();\n  @state() private cleaningExited = false;\n\n  private handleRefresh() {\n    this.dispatchEvent(new CustomEvent('refresh'));\n  }\n\n  private handleSessionSelect(e: CustomEvent) {\n    const session = e.detail as Session;\n    window.location.search = `?session=${session.id}`;\n  }\n\n  private async handleSessionKill(e: CustomEvent) {\n    const sessionId = e.detail;\n    if (this.killingSessionIds.has(sessionId)) return;\n    \n    this.killingSessionIds.add(sessionId);\n    this.requestUpdate();\n\n    try {\n      const response = await fetch(`/api/sessions/${sessionId}`, {\n        method: 'DELETE'\n      });\n\n      if (response.ok) {\n        this.dispatchEvent(new CustomEvent('session-killed', { detail: sessionId }));\n      } else {\n        this.dispatchEvent(new CustomEvent('error', { detail: 'Failed to kill session' }));\n      }\n    } catch (error) {\n      console.error('Error killing session:', error);\n      this.dispatchEvent(new CustomEvent('error', { detail: 'Failed to kill session' }));\n    } finally {\n      this.killingSessionIds.delete(sessionId);\n      this.requestUpdate();\n    }\n  }\n\n  private async handleCleanupExited() {\n    if (this.cleaningExited) return;\n    \n    this.cleaningExited = true;\n    this.requestUpdate();\n\n    try {\n      const response = await fetch('/api/cleanup-exited', {\n        method: 'POST'\n      });\n\n      if (response.ok) {\n        this.dispatchEvent(new CustomEvent('refresh'));\n      } else {\n        this.dispatchEvent(new CustomEvent('error', { detail: 'Failed to cleanup exited sessions' }));\n      }\n    } catch (error) {\n      console.error('Error cleaning up exited sessions:', error);\n      this.dispatchEvent(new CustomEvent('error', { detail: 'Failed to cleanup exited sessions' }));\n    } finally {\n      this.cleaningExited = false;\n      this.requestUpdate();\n    }\n  }\n\n  render() {\n    const filteredSessions = this.hideExited \n      ? this.sessions.filter(session => session.status !== 'exited')\n      : this.sessions;\n\n    return html`\n      <div class=\"font-mono text-sm p-4\">\n        <!-- Controls -->\n        <div class=\"mb-4 flex items-center justify-between\">\n          ${!this.hideExited ? html`\n            <button\n              class=\"bg-vs-warning text-vs-bg hover:bg-vs-highlight font-mono px-4 py-2 border-none rounded transition-colors disabled:opacity-50\"\n              @click=${this.handleCleanupExited}\n              ?disabled=${this.cleaningExited || this.sessions.filter(s => s.status === 'exited').length === 0}\n            >\n              ${this.cleaningExited ? '[~] CLEANING...' : 'CLEAN EXITED'}\n            </button>\n          ` : html`<div></div>`}\n\n          <label class=\"flex items-center gap-2 text-vs-text text-sm cursor-pointer hover:text-vs-accent transition-colors\">\n            <div class=\"relative\">\n              <input\n                type=\"checkbox\"\n                class=\"sr-only\"\n                .checked=${this.hideExited}\n                @change=${(e: Event) => this.dispatchEvent(new CustomEvent('hide-exited-change', { detail: (e.target as HTMLInputElement).checked }))}\n              >\n              <div class=\"w-4 h-4 border border-vs-border rounded bg-vs-bg-secondary flex items-center justify-center transition-all ${\n                this.hideExited ? 'bg-vs-user border-vs-user' : 'hover:border-vs-accent'\n              }\">\n                ${this.hideExited ? html`\n                  <svg class=\"w-3 h-3 text-vs-bg\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path fill-rule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clip-rule=\"evenodd\"></path>\n                  </svg>\n                ` : ''}\n              </div>\n            </div>\n            hide exited\n          </label>\n        </div>\n        ${filteredSessions.length === 0 ? html`\n          <div class=\"text-vs-muted text-center py-8\">\n            ${this.loading ? 'Loading sessions...' : (this.hideExited && this.sessions.length > 0 ? 'No running sessions' : 'No sessions found')}\n          </div>\n        ` : html`\n          <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            ${repeat(filteredSessions, (session) => session.id, (session) => html`\n              <session-card \n                .session=${session}\n                @session-select=${this.handleSessionSelect}\n                @session-kill=${this.handleSessionKill}>\n              </session-card>\n            `)}\n          </div>\n        `}\n\n        <session-create-form\n          .visible=${this.showCreateModal}\n          @session-created=${(e: CustomEvent) => this.dispatchEvent(new CustomEvent('session-created', { detail: e.detail }))}\n          @cancel=${() => this.dispatchEvent(new CustomEvent('create-modal-close'))}\n          @error=${(e: CustomEvent) => this.dispatchEvent(new CustomEvent('error', { detail: e.detail }))}\n        ></session-create-form>\n      </div>\n    `;\n  }\n}"]}