{"version":3,"file":"session-list.js","sourceRoot":"","sources":["../../src/client/components/session-list.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, html } from 'lit';\nimport { customElement, property, state } from 'lit/decorators.js';\nimport './session-create-form.js';\n\nexport interface Session {\n  id: string;\n  command: string;\n  workingDir: string;\n  status: 'running' | 'exited';\n  exitCode?: number;\n  startedAt: string;\n  lastModified: string;\n  pid?: number;\n}\n\n@customElement('session-list')\nexport class SessionList extends LitElement {\n  // Disable shadow DOM to use Tailwind\n  createRenderRoot() {\n    return this;\n  }\n\n  @property({ type: Array }) sessions: Session[] = [];\n  @property({ type: Boolean }) loading = false;\n\n  @state() private killingSessionIds = new Set<string>();\n  @state() private loadedSnapshots = new Map<string, string>();\n  @state() private loadingSnapshots = new Set<string>();\n  @state() private hideExited = true;\n  @state() private showCreateModal = false;\n  @state() private cleaningExited = false;\n  @state() private newSessionIds = new Set<string>();\n\n  private handleRefresh() {\n    this.dispatchEvent(new CustomEvent('refresh'));\n  }\n\n  private async loadSnapshot(sessionId: string) {\n    if (this.loadedSnapshots.has(sessionId) || this.loadingSnapshots.has(sessionId)) {\n      return;\n    }\n\n    this.loadingSnapshots.add(sessionId);\n    this.requestUpdate();\n\n    try {\n      // Just mark as loaded and create the player with the endpoint URL\n      this.loadedSnapshots.set(sessionId, sessionId);\n      this.requestUpdate();\n      \n      // Create asciinema player after the element is rendered\n      setTimeout(() => this.createPlayer(sessionId), 10);\n    } catch (error) {\n      console.error('Error loading snapshot:', error);\n    } finally {\n      this.loadingSnapshots.delete(sessionId);\n      this.requestUpdate();\n    }\n  }\n\n  private loadAllSnapshots() {\n    this.sessions.forEach(session => {\n      this.loadSnapshot(session.id);\n    });\n  }\n\n  updated(changedProperties: any) {\n    super.updated(changedProperties);\n    if (changedProperties.has('sessions')) {\n      // Auto-load snapshots for existing sessions immediately, but delay for new ones\n      const prevSessions = changedProperties.get('sessions') || [];\n      const newSessionIdsList = this.sessions\n        .filter(session => !prevSessions.find((prev: Session) => prev.id === session.id))\n        .map(session => session.id);\n      \n      // Track new sessions\n      newSessionIdsList.forEach(id => this.newSessionIds.add(id));\n      \n      // Load existing sessions immediately\n      const existingSessions = this.sessions.filter(session => \n        !newSessionIdsList.includes(session.id)\n      );\n      existingSessions.forEach(session => this.loadSnapshot(session.id));\n      \n      // Load new sessions after a delay to let them generate some output\n      if (newSessionIdsList.length > 0) {\n        setTimeout(() => {\n          newSessionIdsList.forEach(sessionId => {\n            this.newSessionIds.delete(sessionId); // Remove from new sessions set\n            this.loadSnapshot(sessionId);\n          });\n          this.requestUpdate(); // Update UI to show the players\n        }, 500); // Wait 500ms for new sessions\n      }\n    }\n  }\n\n  private createPlayer(sessionId: string) {\n    const playerElement = this.querySelector(`#player-${sessionId}`) as HTMLElement;\n    if (playerElement && (window as any).AsciinemaPlayer) {\n      try {\n        const snapshotUrl = `/api/sessions/${sessionId}/snapshot`;\n        \n        (window as any).AsciinemaPlayer.create(snapshotUrl, playerElement, {\n          autoPlay: true,\n          loop: false,\n          controls: false,\n          fit: 'both',\n          terminalFontSize: '8px',\n          idleTimeLimit: 0.5,\n          preload: true,\n          poster: 'npt:999999'\n        });\n      } catch (error) {\n        console.error('Error creating asciinema player:', error);\n      }\n    }\n  }\n\n  private handleSessionClick(session: Session) {\n    this.dispatchEvent(new CustomEvent('session-select', {\n      detail: session\n    }));\n  }\n\n  private async handleKillSession(e: Event, sessionId: string) {\n    e.stopPropagation(); // Prevent session selection\n\n    if (!confirm('Are you sure you want to kill this session?')) {\n      return;\n    }\n\n    this.killingSessionIds.add(sessionId);\n    this.requestUpdate();\n\n    try {\n      const response = await fetch(`/api/sessions/${sessionId}`, {\n        method: 'DELETE'\n      });\n\n      if (response.ok) {\n        this.dispatchEvent(new CustomEvent('session-killed', {\n          detail: { sessionId }\n        }));\n        // Refresh the list after a short delay\n        setTimeout(() => {\n          this.handleRefresh();\n        }, 1000);\n      } else {\n        const error = await response.json();\n        this.dispatchEvent(new CustomEvent('error', {\n          detail: `Failed to kill session: ${error.error}`\n        }));\n      }\n    } catch (error) {\n      console.error('Error killing session:', error);\n      this.dispatchEvent(new CustomEvent('error', {\n        detail: 'Failed to kill session'\n      }));\n    } finally {\n      this.killingSessionIds.delete(sessionId);\n      this.requestUpdate();\n    }\n  }\n\n  private formatTime(timestamp: string): string {\n    try {\n      const date = new Date(timestamp);\n      return date.toLocaleTimeString();\n    } catch {\n      return 'Unknown';\n    }\n  }\n\n  private truncateId(id: string): string {\n    return id.length > 8 ? `${id.substring(0, 8)}...` : id;\n  }\n\n  private handleSessionCreated(e: CustomEvent) {\n    this.showCreateModal = false;\n    this.dispatchEvent(new CustomEvent('session-created', {\n      detail: e.detail\n    }));\n  }\n\n  private handleCreateError(e: CustomEvent) {\n    this.dispatchEvent(new CustomEvent('error', {\n      detail: e.detail\n    }));\n  }\n\n  private async handleCleanExited() {\n    const exitedSessions = this.sessions.filter(session => session.status === 'exited');\n    \n    if (exitedSessions.length === 0) {\n      this.dispatchEvent(new CustomEvent('error', {\n        detail: 'No exited sessions to clean'\n      }));\n      return;\n    }\n\n    if (!confirm(`Are you sure you want to delete ${exitedSessions.length} exited session${exitedSessions.length > 1 ? 's' : ''}?`)) {\n      return;\n    }\n\n    this.cleaningExited = true;\n    this.requestUpdate();\n\n    try {\n      // Use the bulk cleanup API endpoint\n      const response = await fetch('/api/cleanup-exited', {\n        method: 'POST'\n      });\n      \n      if (!response.ok) {\n        throw new Error('Failed to cleanup exited sessions');\n      }\n      \n      this.dispatchEvent(new CustomEvent('error', {\n        detail: `Successfully cleaned ${exitedSessions.length} exited session${exitedSessions.length > 1 ? 's' : ''}`\n      }));\n      \n      // Refresh the list after cleanup\n      setTimeout(() => {\n        this.handleRefresh();\n      }, 500);\n      \n    } catch (error) {\n      console.error('Error cleaning exited sessions:', error);\n      this.dispatchEvent(new CustomEvent('error', {\n        detail: 'Failed to clean exited sessions'\n      }));\n    } finally {\n      this.cleaningExited = false;\n      this.requestUpdate();\n    }\n  }\n\n  private get filteredSessions() {\n    return this.hideExited \n      ? this.sessions.filter(session => session.status === 'running')\n      : this.sessions;\n  }\n\n  render() {\n    const sessionsToShow = this.filteredSessions;\n    \n    return html`\n      <div class=\"font-mono text-sm p-4\">\n        <!-- Controls -->\n        <div class=\"mb-4 space-y-3 md:space-y-0\">\n          <!-- Mobile: Stack everything -->\n          <div class=\"flex flex-col space-y-3 md:hidden\">\n            <div class=\"flex items-center gap-2\">\n              <button \n                class=\"bg-vs-user text-vs-text hover:bg-vs-accent font-mono px-3 py-2 border-none rounded transition-colors text-sm flex-1\"\n                @click=${() => this.showCreateModal = true}\n              >\nCREATE\n              </button>\n              \n              <button \n                class=\"bg-vs-warning text-vs-bg hover:bg-vs-highlight font-mono px-3 py-2 border-none rounded transition-colors disabled:opacity-50 text-sm flex-1\"\n                @click=${this.handleCleanExited}\n                ?disabled=${this.cleaningExited || this.sessions.filter(s => s.status === 'exited').length === 0}\n              >\n                ${this.cleaningExited ? '[~] CLEANING...' : 'CLEAN'}\n              </button>\n            </div>\n            \n            <label class=\"flex items-center gap-2 text-vs-text text-sm cursor-pointer hover:text-vs-accent transition-colors\">\n              <div class=\"relative\">\n                <input \n                  type=\"checkbox\" \n                  class=\"sr-only\" \n                  .checked=${this.hideExited}\n                  @change=${(e: Event) => this.hideExited = (e.target as HTMLInputElement).checked}\n                >\n                <div class=\"w-4 h-4 border border-vs-border rounded bg-vs-bg-secondary flex items-center justify-center transition-all ${\n                  this.hideExited ? 'bg-vs-user border-vs-user' : 'hover:border-vs-accent'\n                }\">\n                  ${this.hideExited ? html`\n                    <svg class=\"w-3 h-3 text-vs-bg\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path fill-rule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clip-rule=\"evenodd\"></path>\n                    </svg>\n                  ` : ''}\n                </div>\n              </div>\n              --filter-exited\n            </label>\n          </div>\n          \n          <!-- Desktop: Side by side -->\n          <div class=\"hidden md:flex md:items-center md:justify-between\">\n            <div class=\"flex items-center gap-3\">\n              <button \n                class=\"bg-vs-user text-vs-text hover:bg-vs-accent font-mono px-4 py-2 border-none rounded transition-colors\"\n                @click=${() => this.showCreateModal = true}\n              >\nCREATE SESSION\n              </button>\n              \n              <button \n                class=\"bg-vs-warning text-vs-bg hover:bg-vs-highlight font-mono px-4 py-2 border-none rounded transition-colors disabled:opacity-50\"\n                @click=${this.handleCleanExited}\n                ?disabled=${this.cleaningExited || this.sessions.filter(s => s.status === 'exited').length === 0}\n              >\n                ${this.cleaningExited ? '[~] CLEANING...' : 'CLEAN EXITED'}\n              </button>\n            </div>\n            \n            <label class=\"flex items-center gap-2 text-vs-text text-sm cursor-pointer hover:text-vs-accent transition-colors\">\n              <div class=\"relative\">\n                <input \n                  type=\"checkbox\" \n                  class=\"sr-only\" \n                  .checked=${this.hideExited}\n                  @change=${(e: Event) => this.hideExited = (e.target as HTMLInputElement).checked}\n                >\n                <div class=\"w-4 h-4 border border-vs-border rounded bg-vs-bg-secondary flex items-center justify-center transition-all ${\n                  this.hideExited ? 'bg-vs-user border-vs-user' : 'hover:border-vs-accent'\n                }\">\n                  ${this.hideExited ? html`\n                    <svg class=\"w-3 h-3 text-vs-bg\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path fill-rule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clip-rule=\"evenodd\"></path>\n                    </svg>\n                  ` : ''}\n                </div>\n              </div>\n              --filter-exited\n            </label>\n          </div>\n        </div>\n\n        ${sessionsToShow.length === 0 ? html`\n          <div class=\"text-vs-muted text-center py-8\">\n            ${this.loading ? 'Loading sessions...' : (this.hideExited && this.sessions.length > 0 ? 'No running sessions' : 'No sessions found')}\n          </div>\n        ` : html`\n          <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            ${sessionsToShow.map(session => html`\n              <div \n                class=\"bg-vs-bg border border-vs-border rounded shadow cursor-pointer overflow-hidden\"\n                @click=${() => this.handleSessionClick(session)}\n              >\n                <!-- Compact Header -->\n                <div class=\"flex justify-between items-center px-3 py-2 border-b border-vs-border\">\n                  <div class=\"text-vs-text text-xs font-mono truncate pr-2 flex-1\">${session.command}</div>\n                  <button \n                    class=\"bg-vs-warning text-vs-bg hover:bg-vs-highlight font-mono px-2 py-0.5 border-none text-xs disabled:opacity-50 flex-shrink-0 rounded\"\n                    @click=${(e: Event) => this.handleKillSession(e, session.id)}\n                    ?disabled=${this.killingSessionIds.has(session.id)}\n                  >\n                    ${this.killingSessionIds.has(session.id) ? '[~] killing...' : 'kill'}\n                  </button>\n                </div>\n\n                <!-- Asciinema player (main content) -->\n                <div class=\"session-preview bg-black flex items-center justify-center\" style=\"aspect-ratio: 640/480;\">\n                  ${this.loadedSnapshots.has(session.id) ? html`\n                    <div id=\"player-${session.id}\" class=\"w-full h-full\" style=\"overflow: hidden;\"></div>\n                  ` : html`\n                    <div class=\"text-vs-muted text-xs\">\n                      ${this.newSessionIds.has(session.id) \n                        ? '[~] init_session...' \n                        : (this.loadingSnapshots.has(session.id) ? '[~] loading...' : '[~] loading...')\n                      }\n                    </div>\n                  `}\n                </div>\n\n                <!-- Compact Footer -->\n                <div class=\"px-3 py-2 text-vs-muted text-xs border-t border-vs-border\">\n                  <div class=\"flex justify-between items-center\">\n                    <span class=\"${session.status === 'running' ? 'text-vs-user' : 'text-vs-warning'} text-xs\">\n                      ${session.status}\n                    </span>\n                    <span class=\"truncate\">${this.truncateId(session.id)}</span>\n                  </div>\n                  <div class=\"truncate text-xs opacity-75\" title=\"${session.workingDir}\">${session.workingDir}</div>\n                </div>\n              </div>\n            `)}\n          </div>\n        `}\n        \n        <session-create-form\n          .visible=${this.showCreateModal}\n          @session-created=${this.handleSessionCreated}\n          @cancel=${() => this.showCreateModal = false}\n          @error=${this.handleCreateError}\n        ></session-create-form>\n      </div>\n    `;\n  }\n}"]}