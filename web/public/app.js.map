{"version":3,"file":"app.js","sourceRoot":"","sources":["../src/client/app.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, html } from 'lit';\nimport { customElement, state } from 'lit/decorators.js';\n\n// Import components\nimport './components/app-header.js';\nimport './components/session-create-form.js';\nimport './components/session-list.js';\nimport './components/session-view.js';\nimport './components/session-card.js';\n\nimport type { Session } from './components/session-list.js';\n\n@customElement('vibetunnel-app')\nexport class VibeTunnelApp extends LitElement {\n  // Disable shadow DOM to use Tailwind\n  createRenderRoot() {\n    return this;\n  }\n\n  @state() private errorMessage = '';\n  @state() private sessions: Session[] = [];\n  @state() private loading = false;\n  @state() private currentView: 'list' | 'session' = 'list';\n  @state() private selectedSession: Session | null = null;\n  @state() private hideExited = true;\n  @state() private showCreateModal = false;\n\n  private hotReloadWs: WebSocket | null = null;\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.setupHotReload();\n    this.loadSessions();\n    this.startAutoRefresh();\n    this.setupRouting();\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    if (this.hotReloadWs) {\n      this.hotReloadWs.close();\n    }\n    // Clean up routing listeners\n    window.removeEventListener('popstate', this.handlePopState);\n  }\n\n  private showError(message: string) {\n    this.errorMessage = message;\n    // Clear error after 5 seconds\n    setTimeout(() => {\n      this.errorMessage = '';\n    }, 5000);\n  }\n\n  private clearError() {\n    this.errorMessage = '';\n  }\n\n  private async loadSessions() {\n    this.loading = true;\n    try {\n      const response = await fetch('/api/sessions');\n      if (response.ok) {\n        const sessionsData = await response.json();\n        this.sessions = sessionsData.map((session: any) => ({\n          id: session.id,\n          command: session.command,\n          workingDir: session.workingDir,\n          status: session.status,\n          exitCode: session.exitCode,\n          startedAt: session.startedAt,\n          lastModified: session.lastModified,\n          pid: session.pid\n        }));\n        this.clearError();\n      } else {\n        this.showError('Failed to load sessions');\n      }\n    } catch (error) {\n      console.error('Error loading sessions:', error);\n      this.showError('Failed to load sessions');\n    } finally {\n      this.loading = false;\n    }\n  }\n\n  private startAutoRefresh() {\n    // Refresh sessions every 3 seconds, but only when showing session list\n    setInterval(() => {\n      if (this.currentView === 'list') {\n        this.loadSessions();\n      }\n    }, 3000);\n  }\n\n  private async handleSessionCreated(e: CustomEvent) {\n    const sessionId = e.detail.sessionId;\n\n    if (!sessionId) {\n      this.showError('Session created but ID not found in response');\n      return;\n    }\n\n    this.showCreateModal = false;\n\n    // Wait for session to appear in the list and then switch to it\n    await this.waitForSessionAndSwitch(sessionId);\n  }\n\n  private async waitForSessionAndSwitch(sessionId: string) {\n    const maxAttempts = 10;\n    const delay = 500; // 500ms between attempts\n\n    for (let attempt = 0; attempt < maxAttempts; attempt++) {\n      await this.loadSessions();\n\n      // Try to find by exact ID match first\n      let session = this.sessions.find(s => s.id === sessionId);\n\n      // If not found by ID, find the most recently created session\n      // This works around tty-fwd potentially using different IDs internally\n      if (!session && this.sessions.length > 0) {\n        const sortedSessions = [...this.sessions].sort((a, b) =>\n          new Date(b.startedAt).getTime() - new Date(a.startedAt).getTime()\n        );\n        session = sortedSessions[0];\n      }\n\n      if (session) {\n        // Session found, switch to session view\n        this.selectedSession = session;\n        this.currentView = 'session';\n        // Update URL to include session ID\n        this.updateUrl(session.id);\n        return;\n      }\n\n      // Wait before next attempt\n      await new Promise(resolve => setTimeout(resolve, delay));\n    }\n\n    // If we get here, session creation might have failed\n    console.log('Session not found after all attempts');\n    this.showError('Session created but could not be found. Please refresh.');\n  }\n\n  private handleSessionSelect(e: CustomEvent) {\n    const session = e.detail as Session;\n    console.log('Session selected:', session);\n    this.selectedSession = session;\n    this.currentView = 'session';\n    // Update URL to include session ID\n    this.updateUrl(session.id);\n  }\n\n  private handleBack() {\n    this.currentView = 'list';\n    this.selectedSession = null;\n    // Update URL to remove session parameter\n    this.updateUrl();\n  }\n\n\n  private handleSessionKilled(e: CustomEvent) {\n    console.log('Session killed:', e.detail);\n    this.loadSessions(); // Refresh the list\n  }\n\n  private handleRefresh() {\n    this.loadSessions();\n  }\n\n  private handleError(e: CustomEvent) {\n    this.showError(e.detail);\n  }\n\n  private handleHideExitedChange(e: CustomEvent) {\n    this.hideExited = e.detail;\n  }\n\n  private handleCreateSession() {\n    this.showCreateModal = true;\n  }\n\n  private handleCreateModalClose() {\n    this.showCreateModal = false;\n  }\n\n  // URL Routing methods\n  private setupRouting() {\n    // Handle browser back/forward navigation\n    window.addEventListener('popstate', this.handlePopState.bind(this));\n\n    // Parse initial URL and set state\n    this.parseUrlAndSetState();\n  }\n\n  private handlePopState = (event: PopStateEvent) => {\n    // Handle browser back/forward navigation\n    this.parseUrlAndSetState();\n  }\n\n  private parseUrlAndSetState() {\n    const url = new URL(window.location.href);\n    const sessionId = url.searchParams.get('session');\n\n    if (sessionId) {\n      // Load the specific session\n      this.loadSessionFromUrl(sessionId);\n    } else {\n      // Show session list\n      this.currentView = 'list';\n      this.selectedSession = null;\n    }\n  }\n\n  private async loadSessionFromUrl(sessionId: string) {\n    // First ensure sessions are loaded\n    if (this.sessions.length === 0) {\n      await this.loadSessions();\n    }\n\n    // Find the session\n    const session = this.sessions.find(s => s.id === sessionId);\n    if (session) {\n      this.selectedSession = session;\n      this.currentView = 'session';\n    } else {\n      // Session not found, go to list view\n      this.currentView = 'list';\n      this.selectedSession = null;\n      // Update URL to remove invalid session ID\n      this.updateUrl();\n    }\n  }\n\n  private updateUrl(sessionId?: string) {\n    const url = new URL(window.location.href);\n\n    if (sessionId) {\n      url.searchParams.set('session', sessionId);\n    } else {\n      url.searchParams.delete('session');\n    }\n\n    // Update browser URL without triggering page reload\n    window.history.pushState(null, '', url.toString());\n  }\n\n  private setupHotReload(): void {\n    if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {\n      const protocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';\n      const wsUrl = `${protocol}//${window.location.host}?hotReload=true`;\n\n      this.hotReloadWs = new WebSocket(wsUrl);\n      this.hotReloadWs.onmessage = (event) => {\n        const message = JSON.parse(event.data);\n        if (message.type === 'reload') {\n          window.location.reload();\n        }\n      };\n    }\n  }\n\n  render() {\n    return html`\n      <!-- Error notification overlay -->\n      ${this.errorMessage ? html`\n        <div class=\"fixed top-4 right-4 z-50\">\n          <div class=\"bg-vs-warning text-vs-bg px-4 py-2 rounded shadow-lg font-mono text-sm\">\n            ${this.errorMessage}\n            <button @click=${this.clearError} class=\"ml-2 text-vs-bg hover:text-vs-muted\">✕</button>\n          </div>\n        </div>\n      ` : ''}\n\n      <!-- Main content -->\n      ${this.currentView === 'session' ? html`\n        <session-view\n          .session=${this.selectedSession}\n          @back=${this.handleBack}\n        ></session-view>\n      ` : html`\n        <div class=\"max-w-4xl mx-auto\">\n          <app-header\n            @create-session=${this.handleCreateSession}\n          ></app-header>\n          <session-list\n            .sessions=${this.sessions}\n            .loading=${this.loading}\n            .hideExited=${this.hideExited}\n            .showCreateModal=${this.showCreateModal}\n            @session-select=${this.handleSessionSelect}\n            @session-killed=${this.handleSessionKilled}\n            @session-created=${this.handleSessionCreated}\n            @create-modal-close=${this.handleCreateModalClose}\n            @refresh=${this.handleRefresh}\n            @error=${this.handleError}\n            @hide-exited-change=${this.handleHideExitedChange}\n          ></session-list>\n        </div>\n      `}\n    `;\n  }\n}"]}