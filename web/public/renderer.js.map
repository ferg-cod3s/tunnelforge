{"version":3,"file":"renderer.js","sourceRoot":"","sources":["../src/client/renderer.ts"],"names":[],"mappings":"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","sourcesContent":["// Terminal renderer for asciinema cast format using XTerm.js\n// Professional-grade terminal emulation with full VT compatibility\n\nimport { Terminal } from '@xterm/xterm';\nimport { FitAddon } from '@xterm/addon-fit';\nimport { WebLinksAddon } from '@xterm/addon-web-links';\nimport { ScaleFitAddon } from './scale-fit-addon.js';\n\ninterface CastHeader {\n  version: number;\n  width: number;\n  height: number;\n  timestamp?: number;\n  env?: Record<string, string>;\n}\n\ninterface CastEvent {\n  timestamp: number;\n  type: 'o' | 'i' | 'r'; // output, input, or resize\n  data: string;\n}\n\nexport class Renderer {\n  private static activeCount: number = 0;\n  \n  private container: HTMLElement;\n  private terminal: Terminal;\n  private fitAddon: FitAddon;\n  private scaleFitAddon: ScaleFitAddon;\n  private webLinksAddon: WebLinksAddon;\n  private isPreview: boolean;\n\n  constructor(container: HTMLElement, width: number = 80, height: number = 20, scrollback: number = 1000000, fontSize: number = 14, isPreview: boolean = false) {\n    Renderer.activeCount++;\n    console.log(`Renderer constructor called (active: ${Renderer.activeCount})`);\n    this.container = container;\n    this.isPreview = isPreview;\n\n    // Create terminal with options similar to the custom renderer\n    this.terminal = new Terminal({\n      cols: width,\n      rows: height,\n      fontFamily: 'Monaco, \"Lucida Console\", monospace',\n      fontSize: fontSize,\n      lineHeight: 1.2,\n      theme: {\n        background: '#1e1e1e',\n        foreground: '#d4d4d4',\n        cursor: '#ffffff',\n        cursorAccent: '#1e1e1e',\n        selectionBackground: '#264f78',\n        // VS Code Dark theme colors\n        black: '#000000',\n        red: '#f14c4c',\n        green: '#23d18b',\n        yellow: '#f5f543',\n        blue: '#3b8eea',\n        magenta: '#d670d6',\n        cyan: '#29b8db',\n        white: '#e5e5e5',\n        // Bright colors\n        brightBlack: '#666666',\n        brightRed: '#f14c4c',\n        brightGreen: '#23d18b',\n        brightYellow: '#f5f543',\n        brightBlue: '#3b8eea',\n        brightMagenta: '#d670d6',\n        brightCyan: '#29b8db',\n        brightWhite: '#ffffff'\n      },\n      allowProposedApi: true,\n      scrollback: scrollback, // Configurable scrollback buffer\n      convertEol: true,\n      altClickMovesCursor: false,\n      rightClickSelectsWord: false,\n      disableStdin: true, // We handle input separately\n    });\n\n    // Add addons\n    this.fitAddon = new FitAddon();\n    this.scaleFitAddon = new ScaleFitAddon();\n    this.webLinksAddon = new WebLinksAddon();\n\n    this.terminal.loadAddon(this.fitAddon);\n    this.terminal.loadAddon(this.scaleFitAddon);\n    this.terminal.loadAddon(this.webLinksAddon);\n\n    this.setupDOM();\n  }\n\n  private setupDOM(): void {\n    // Clear container and add CSS\n    this.container.innerHTML = '';\n    \n    // Different styling for preview vs full terminals\n    if (this.isPreview) {\n      // No padding for previews, let container control sizing\n      this.container.style.padding = '0';\n      this.container.style.backgroundColor = '#1e1e1e';\n      this.container.style.overflow = 'hidden';\n    } else {\n      // Full terminals get padding\n      this.container.style.padding = '10px';\n      this.container.style.backgroundColor = '#1e1e1e';\n      this.container.style.overflow = 'hidden';\n    }\n\n    // Create terminal wrapper\n    const terminalWrapper = document.createElement('div');\n    terminalWrapper.style.width = '100%';\n    terminalWrapper.style.height = '100%';\n    this.container.appendChild(terminalWrapper);\n\n    // Open terminal in the wrapper\n    this.terminal.open(terminalWrapper);\n\n    // Always use ScaleFitAddon for better scaling\n    this.scaleFitAddon.fit();\n\n    // Handle container resize\n    const resizeObserver = new ResizeObserver(() => {\n      this.scaleFitAddon.fit();\n    });\n    resizeObserver.observe(this.container);\n  }\n\n\n  // Public API methods - maintain compatibility with custom renderer\n\n  async loadCastFile(url: string): Promise<void> {\n    const response = await fetch(url);\n    const text = await response.text();\n    this.parseCastFile(text);\n  }\n\n  parseCastFile(content: string): void {\n    const lines = content.trim().split('\\n');\n    let header: CastHeader | null = null;\n\n    // Clear terminal\n    this.terminal.clear();\n\n    for (const line of lines) {\n      if (!line.trim()) continue;\n\n      try {\n        const parsed = JSON.parse(line);\n\n        if (parsed.version && parsed.width && parsed.height) {\n          // Header\n          header = parsed;\n          this.resize(parsed.width, parsed.height);\n        } else if (Array.isArray(parsed) && parsed.length >= 3) {\n          // Event: [timestamp, type, data]\n          const event: CastEvent = {\n            timestamp: parsed[0],\n            type: parsed[1],\n            data: parsed[2]\n          };\n\n          if (event.type === 'o') {\n            this.processOutput(event.data);\n          } else if (event.type === 'r') {\n            this.processResize(event.data);\n          }\n        }\n      } catch (e) {\n        console.warn('Failed to parse cast line:', line);\n      }\n    }\n  }\n\n  processOutput(data: string): void {\n    // XTerm handles all ANSI escape sequences automatically\n    this.terminal.write(data);\n  }\n\n  processResize(data: string): void {\n    // Parse resize data in format \"WIDTHxHEIGHT\" (e.g., \"80x24\")\n    const match = data.match(/^(\\d+)x(\\d+)$/);\n    if (match) {\n      const width = parseInt(match[1], 10);\n      const height = parseInt(match[2], 10);\n      this.resize(width, height);\n    }\n  }\n\n  processEvent(event: CastEvent): void {\n    if (event.type === 'o') {\n      this.processOutput(event.data);\n    } else if (event.type === 'r') {\n      this.processResize(event.data);\n    }\n  }\n\n  resize(width: number, height: number): void {\n    if (this.isPreview) {\n      // For previews, resize to session dimensions then apply scaling\n      this.terminal.resize(width, height);\n    }\n    // Always use ScaleFitAddon for consistent scaling behavior\n    this.scaleFitAddon.fit();\n  }\n\n  clear(): void {\n    this.terminal.clear();\n  }\n\n  // Stream support - connect to SSE endpoint\n  connectToStream(sessionId: string): EventSource {\n    console.log('connectToStream called for session:', sessionId);\n    return this.connectToUrl(`/api/sessions/${sessionId}/stream`);\n  }\n\n  // Connect to any SSE URL\n  connectToUrl(url: string): EventSource {\n    console.log('Creating new EventSource connection to:', url);\n    const eventSource = new EventSource(url);\n\n    // Don't clear terminal for live streams - just append new content\n\n    eventSource.onmessage = (event) => {\n      try {\n        const data = JSON.parse(event.data);\n\n        if (data.version && data.width && data.height) {\n          // Header\n          console.log('Received header:', data);\n          this.resize(data.width, data.height);\n        } else if (Array.isArray(data) && data.length >= 3) {\n          // Check if this is an exit event\n          if (data[0] === 'exit') {\n            const exitCode = data[1];\n            const sessionId = data[2];\n            console.log(`Session ${sessionId} exited with code ${exitCode}`);\n            \n            // Close the SSE connection immediately\n            if (this.eventSource) {\n              console.log('Closing SSE connection due to session exit');\n              this.eventSource.close();\n              this.eventSource = null;\n            }\n            \n            // Dispatch custom event that session-view can listen to\n            const exitEvent = new CustomEvent('session-exit', {\n              detail: { sessionId, exitCode }\n            });\n            this.container.dispatchEvent(exitEvent);\n            return;\n          }\n          \n          // Regular cast event\n          const castEvent: CastEvent = {\n            timestamp: data[0],\n            type: data[1],\n            data: data[2]\n          };\n          // Process event without verbose logging\n          this.processEvent(castEvent);\n        }\n      } catch (e) {\n        console.warn('Failed to parse stream event:', event.data);\n      }\n    };\n\n    eventSource.onerror = (error) => {\n      console.error('Stream error:', error);\n      // Close the connection to prevent automatic reconnection attempts\n      if (eventSource.readyState === EventSource.CLOSED) {\n        console.log('Stream closed, cleaning up...');\n        if (this.eventSource === eventSource) {\n          this.eventSource = null;\n        }\n      }\n    };\n\n    return eventSource;\n  }\n\n  private eventSource: EventSource | null = null;\n\n  // Load content from URL - pass isStream to determine how to handle it\n  async loadFromUrl(url: string, isStream: boolean): Promise<void> {\n    // Clean up existing connection\n    if (this.eventSource) {\n      console.log('Explicitly closing existing EventSource connection');\n      this.eventSource.close();\n      this.eventSource = null;\n    }\n\n    if (isStream) {\n      // It's a stream URL, connect via SSE (don't clear - append to existing content)\n      this.eventSource = this.connectToUrl(url);\n    } else {\n      // It's a snapshot URL, clear first then load as cast file\n      this.terminal.clear();\n      await this.loadCastFile(url);\n    }\n  }\n\n  // Additional methods for terminal control\n\n  focus(): void {\n    this.terminal.focus();\n  }\n\n  blur(): void {\n    this.terminal.blur();\n  }\n\n  getTerminal(): Terminal {\n    return this.terminal;\n  }\n\n  dispose(): void {\n    if (this.eventSource) {\n      console.log('Explicitly closing EventSource connection in dispose()');\n      this.eventSource.close();\n      this.eventSource = null;\n    }\n    this.terminal.dispose();\n    Renderer.activeCount--;\n    console.log(`Renderer disposed (active: ${Renderer.activeCount})`);\n  }\n\n  // Method to fit terminal to container (useful for responsive layouts)\n  fit(): void {\n    this.fitAddon.fit();\n  }\n\n  // Get terminal dimensions\n  getDimensions(): { cols: number; rows: number } {\n    return {\n      cols: this.terminal.cols,\n      rows: this.terminal.rows\n    };\n  }\n\n  // Write raw data to terminal (useful for testing)\n  write(data: string): void {\n    this.terminal.write(data);\n  }\n\n  // Enable/disable input (though we keep it disabled by default)\n  setInputEnabled(enabled: boolean): void {\n    // XTerm doesn't have a direct way to disable input, so we override onData\n    if (enabled) {\n      // Remove any existing handler first\n      this.terminal.onData(() => {\n        // Input is handled by the session component\n      });\n    } else {\n      this.terminal.onData(() => {\n        // Do nothing - input disabled\n      });\n    }\n  }\n\n  // Disable all pointer events for previews so clicks pass through to parent\n  setPointerEventsEnabled(enabled: boolean): void {\n    const terminalElement = this.container.querySelector('.xterm') as HTMLElement;\n    if (terminalElement) {\n      terminalElement.style.pointerEvents = enabled ? 'auto' : 'none';\n    }\n  }\n}"]}