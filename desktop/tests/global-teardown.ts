/**\n * Global teardown for TunnelForge Desktop E2E tests\n * \n * This file is run once after all tests complete.\n * It handles cleanup and resource deallocation.\n */\n\nimport { FullConfig } from '@playwright/test';\nimport fs from 'fs';\nimport path from 'path';\n\nasync function globalTeardown(config: FullConfig) {\n  console.log('🧹 Starting TunnelForge Desktop E2E Test Teardown');\n  \n  // Clean up any remaining test processes\n  // (Most cleanup should already be handled by individual tests)\n  \n  // Generate test summary\n  const testResultsPath = path.join(process.cwd(), 'test-results');\n  \n  if (fs.existsSync(testResultsPath)) {\n    try {\n      const files = fs.readdirSync(testResultsPath);\n      const screenshots = files.filter(f => f.endsWith('.png')).length;\n      const videos = files.filter(f => f.endsWith('.webm')).length;\n      const traces = files.filter(f => f.endsWith('.zip')).length;\n      \n      console.log('📊 Test artifacts generated:');\n      console.log(`  - Screenshots: ${screenshots}`);\n      console.log(`  - Videos: ${videos}`);\n      console.log(`  - Traces: ${traces}`);\n      \n      if (screenshots + videos + traces > 0) {\n        console.log(`📁 Test artifacts saved in: ${testResultsPath}`);\n      }\n    } catch (error) {\n      console.warn('Could not analyze test results:', error);\n    }\n  }\n  \n  // Log completion\n  console.log('✅ Global teardown completed successfully');\n}\n\nexport default globalTeardown;
